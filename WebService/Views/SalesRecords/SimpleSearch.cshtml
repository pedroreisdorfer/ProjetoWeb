@model IEnumerable<WebService.Models.SalesRecord>

@{
    ViewData["Title"] = "Simple Search";
}

<h2>@ViewData["Title"]</h2>

<nav class="navbar navbar-inverse">
    <div class="container-fluid">
        <form class="navbar-form navbar-left" role="search"> <!--formulário para regular as datas caso a gente queira. Formato de barrinha de busca. Obs sobre o filtro de min e maxDate depois do submit.: foi criado um formulário sem dizer a ação para a qual ele deve ser enviado. Com isso, por padrão, o framework vai enviar para a mesma ação vinculada a essa view, que é o SimpleSearch. Então estou chamando de novo o controlador no SimpleSearch, passando novos valores para minDate e maxDate -->
            <div class="form-group">
                <div class="form-group">
                    <label for="minDate">Min Date</label>
                    <input type="date" class="form-control" name="minDate" value=@ViewData["minDate"] /> <!--recebe o que coloquei lá no controlador-->
                </div>
                <div class="form-group">
                    <label for="maxDate">Max Date</label>
                    <input type="date" class="form-control" name="maxDate" value=@ViewData["maxDate"] />
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    </div>
</nav>
<div class="panel panel-primary"> <!-- aqui vem a listagem das nossas vendas. Essa é a parte nova, A tabela está dentro de um painel-->
    <div class="panel-heading"> <!--esse painel tem um cabeçalho-->
        <h3 class="panel-title">Total sales = @Model.Sum(obj => obj.Amount).ToString("F2")</h3> <!--aqui está a soma total das vendas. Chamada a soma e amount corresponde ao valor da venda-->
    </div>
    <div class="panel-body" <!--e esse painel tem um corpo-->
        <table class="table table-striped table-hover">
            <thead>
                <tr class="success">
                    <th>
                        @Html.DisplayNameFor(model => model.Id) <!-- DisplayNameFor para pegar os nomes dos campos-->
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Seller)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Seller.Department)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Amount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model) // corpo da tabela com um foreach
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id) <!--displayFor para mostrar os dados-->
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Seller.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Seller.Department.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

